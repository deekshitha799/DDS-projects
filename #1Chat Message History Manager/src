#CODE#

import time
from collections import deque

class ChatManager:
    def __init__(self):
        # Queue for storing messages
        self.message_queue = deque()
        # Stack for undo/redo
        self.undo_stack = []
        self.redo_stack = []

    def add_message(self, message):
        timestamp = time.strftime("%I:%M:%S %p")  # e.g., 10:15:23 AM
        entry = {"message": message, "time": timestamp}
        self.message_queue.append(entry)
        self.undo_stack.append(entry)
        self.redo_stack.clear()  # reset redo after new message
        print(f"✅ Message added: '{message}' at {timestamp}")

    def undo_message(self):
        if not self.undo_stack:
            print("⚠️ No message to undo!")
            return
        last_entry = self.undo_stack.pop()
        self.redo_stack.append(last_entry)
        self.message_queue.remove(last_entry)
        print(f"↩️ Undo: '{last_entry['message']}' removed")

    def redo_message(self):
        if not self.redo_stack:
            print("⚠️ No message to redo!")
            return
        entry = self.redo_stack.pop()
        self.message_queue.append(entry)
        self.undo_stack.append(entry)
        print(f"🔁 Redo: '{entry['message']}' restored")

    def show_messages(self):
        if not self.message_queue:
            print("💬 No messages to display.")
            return
        print("\n📜 Chat History:")
        for idx, entry in enumerate(self.message_queue, start=1):
            print(f"{idx}. {entry['message']} - [{entry['time']}]")

# ------------------ Main Menu ------------------

def main():
    manager = ChatManager()
    while True:
        print("\n===== Chat Message History Manager =====")
        print("1. Add Message")
        print("2. Undo Last Message")
        print("3. Redo Last Message")
        print("4. Show All Messages")
        print("5. Exit")
        choice = input("Enter your choice (1-5): ")

        if choice == "1":
            msg = input("Enter your message: ")
            manager.add_message(msg)
        elif choice == "2":
            manager.undo_message()
        elif choice == "3":
            manager.redo_message()
        elif choice == "4":
            manager.show_messages()
        elif choice == "5":
            print("👋 Exiting... Goodbye!")
            break
        else:
            print("⚠️ Invalid choice! Please enter 1-5.")

if __name__ == "__main__":
    main()

